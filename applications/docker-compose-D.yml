version: '3'

services:

  website:
    deploy:
      replicas: 2
    volumes:
      - qr_codes:/usr/share/nginx/html/assets/data:ro
      - ./website/src/assets/configs/app-config-ssl.json:/usr/share/nginx/html/assets/configs/app-config.json
    image: ilefrjiba/t-014-website
    depends_on:
    - backend
    - qr
    networks:
      - public-network
      - private-network

  backend:
    deploy:
      replicas: 2
    image: ilefrjiba/t-014-backend
    depends_on:
      - qr
    networks:
      - public-network
      - private-network
    env_file:
      - backend/.env
    restart: unless-stopped

  qr:
   deploy:
      replicas: 2
   image: ilefrjiba/t-014-qr
   volumes:
    - qr_codes:/generated_qr
   networks:
    - private-network
   env_file:
    - ./qr/.env3
   depends_on:
    - minio

  minio:
    image: 'minio/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=user
      - MINIO_ROOT_PASSWORD=secret_key
    networks:
      - private-network
    volumes:
      - minio_data:/data
      - ./ssl:/root/.minio/certs
    command: server /data --console-address ":9001"
  
  nginx:
    ports:
      - "80:80"
      - "443:443"
    networks:
      - private-network
      - public-network
    depends_on:
      - backend
      - website
      - minio 

    volumes:
      - ./nginx/nginx-http-https.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/certs/training.key:/etc/ssl/private/training.key
      # - ./nginx/certs/training.crt:/etc/ssl/certs/training.crt
      - ./ssl/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./ssl/localhost.decrypted.key:/etc/ssl/certs/localhost.decrypted.key
      - ./website/src/assets/configs:/usr/share/nginx/html/assets/configs

    image:  nginx:stable-alpine

volumes:
  qr_codes:
  minio_data:

networks:
  private-network:
    driver: bridge
  public-network:
    driver: bridge