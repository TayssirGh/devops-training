version: '3.9'

services:
  qr:
    build: 
      context: ./qr
      dockerfile: Dockerfile
    environment:
      - QR_TMP_FOLDER="./generated_qr"
      - QR_FILL_COLOR="#121128"
      - QR_BACKGROUND_COLOR="#dcdbdb"
      - USE_BUCKET=true
      - BUCKET_ENDPOINT=${T006_BUCKET_ENDPOINT}
      - BUCKET_ACCESS_KEY=${T006_BUCKET_ACCESS_KEY}
      - BUCKET_SECRET_KEY=${T006_BUCKET_SECRET_KEY}
      - BUCKET_NAME="qrcode1"
    volumes:
      - qr_data:/app/scripts/generated_qr
    networks:
      - qr_net
    depends_on:
      - minio
    deploy:
      mode: replicated
      replicas: 2
    
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - APP_PORT=3000
      - QR_URL=http://qr:8420/
      - MONGO_URI=${T006_MONGO_URI}
      - MONGO_DB=devops-training
    networks:
      - qr_net
    depends_on:
      - qr
    deploy:
      mode: replicated
      replicas: 2

  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    volumes:
      - qr_data:/app/scripts/generated_qr
      - app_data:/usr/share/nginx/html/assets/data:z
      - ./website/src/assets/configs:/usr/share/nginx/html/assets/configs
    networks:
      - public_network
    deploy:
      mode: replicated
      replicas: 2

  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: ${T006_MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${T006_MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    networks:
      - qr_net


  nginx:
    image: nginx:latest
    ports:
      - 80:80
    depends_on:
      - website
      - minio
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      -  ./website/src/assets/configs:/usr/share/nginx/html/assets/configs
    networks:
      - qr_net
      - public_network
    
volumes:
  minio-data:
  qr_data:
  app_data:


networks:
  public_network:
  qr_net:
