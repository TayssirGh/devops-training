version: "3.9"
services:

 
  qr:
    image: housseinhmila/t-007-qr:v2.0.0
    
    build:
      context: ./qr
    restart: always
    deploy:
     
      replicas: 2
    ports: 
      - 8420
    env_file:
      - qr/.env
    #environment:
    #  - QR_TMP_FOLDER="./generated_qr"
    #  - QR_FILL_COLOR="#121128"
    #  - QR_BACKGROUND_COLOR="#dcdbdb"
    #  - USE_BUCKET=true
    #  - BUCKET_ENDPOINT="play.min.io"
    #  - BUCKET_ACCESS_KEY="Q3AM3UQ867SPQQA43P2F"
    #  - BUCKET_SECRET_KEY="zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG"
    #  - BUCKET_NAME="testaa"
    #  - BUCKET_PATH=""
    #  - BUCKET_ENDPOINT_WEB="play.mini.io:9443"
    #depends_on:
    #  - minio
    volumes:
      - generated_qr:/app/generated_qr/
    networks:
      - qr_network
      - elastic
    depends_on:
      - es01

  backend:
    image: housseinhmila/t-007-backend:v1.0.0
    
    build:
      context: ./backend
    restart: always
    ports: 
     - 3000
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - qr
    env_file:
      - backend/.env
    networks:
      - qr_network
      - app_network
    #environment:
    #  - APP_PORT=3000
    #  - QR_URL=http://qr:8420
    #  - MONGO_URI="${T007_MONGO_URI}"
    #  - MONGO_DB=test

    

  website:
    image: housseinhmila/t-007-website:v1.0.0
    build:
      context: ./website
    restart: always
    deploy:
      mode: replicated
      replicas: 2
    ports: 
     - 4200
    depends_on:
      - backend
    volumes:
    - generated_qr:/etc/nginx/html/assets/data
   
  

    networks:
      - app_network

  #minio:
  #  image: minio/minio
  #  container_name: myminio
  #  environment:
  #    - MINIO_ROOT_USER=strass
  #    - MINIO_ROOT_PASSWORD=strass22
  #  command: server /data --console-address ":9001"
  #  ports:
  #    - 9000:9000
  #    - 9001:9001
  #  volumes:
  #    - ./minio_data:/data
  #  networks:
  #    - qr_network
  #    - app_network

  load_balancer:
    image: nginx:latest
    container_name: load_balancer
    ports:
      - 81:81
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - generated_qr:/etc/nginx/html/assets/data

    networks:
      - qr_network
      - app_network
    depends_on:
      - website
      - backend
     # - minio
      - qr
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic

volumes:
  generated_qr:
  minio_data:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  app_network:
  qr_network:
  elastic:
    driver: bridge
